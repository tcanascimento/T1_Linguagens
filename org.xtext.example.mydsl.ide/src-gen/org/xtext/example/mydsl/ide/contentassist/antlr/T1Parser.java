/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalT1Parser;
import org.xtext.example.mydsl.services.T1GrammarAccess;

public class T1Parser extends AbstractContentAssistParser {

	@Inject
	private T1GrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalT1Parser createParser() {
		InternalT1Parser result = new InternalT1Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
					put(grammarAccess.getValueAccess().getGroup_3(), "rule__Value__Group_3__0");
					put(grammarAccess.getValueAccess().getGroup_4(), "rule__Value__Group_4__0");
					put(grammarAccess.getAttributionAccess().getGroup(), "rule__Attribution__Group__0");
					put(grammarAccess.getDeclarationAccess().getGroup(), "rule__Declaration__Group__0");
					put(grammarAccess.getVarAccess().getGroup(), "rule__Var__Group__0");
					put(grammarAccess.getVarAccess().getGroup_2(), "rule__Var__Group_2__0");
					put(grammarAccess.getModelAccess().getVarsAssignment(), "rule__Model__VarsAssignment");
					put(grammarAccess.getVarAccess().getDeclarationsAssignment_1(), "rule__Var__DeclarationsAssignment_1");
					put(grammarAccess.getVarAccess().getDeclarationsAssignment_2_1(), "rule__Var__DeclarationsAssignment_2_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public T1GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(T1GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
